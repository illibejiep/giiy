<?php

Yii::import('gii.generators.crud.CrudGenerator');

class GiiyCrudGenerator extends CrudGenerator
{
	public $codeModel = 'giiy.giiyCrud.GiiyCrudCode';
    public $giiyModule;

    public function init()
    {
        $this->giiyModule = Yii::app()->getModule('giiy');
        parent::init(); // TODO: Change the autogenerated stub
    }

    protected function getModels() {

        $models = array();
        $files = scandir(Yii::getPathOfAlias('application.models'));
        foreach ($files as $file) {
            if ($file[0] !== '.' && CFileHelper::getExtension($file) === 'php') {
                $fileClassName = substr($file, 0, strpos($file, '.'));
                if (class_exists($fileClassName) && is_subclass_of($fileClassName, 'GiiyActiveRecord')) {
                    $fileClass = new ReflectionClass($fileClassName);
                    if (!$fileClass->isAbstract() && !is_array(GiiyActiveRecord::model($fileClassName)->getPrimaryKey()))
                        $models[] = $fileClassName;
                }
            }
        }

        foreach (Yii::app()->getModules() as $module => $moduleConf) {
            if (Yii::getPathOfAlias($module.'.models')) {
                $files = scandir(Yii::getPathOfAlias($module.'.models'));
                foreach ($files as $file) {
                    if ($file[0] !== '.' && CFileHelper::getExtension($file) === 'php') {
                        $fileClassName = substr($file, 0, strpos($file, '.'));
                        if (class_exists($fileClassName) && is_subclass_of($fileClassName, 'GiiyActiveRecord')) {
                            $fileClass = new ReflectionClass($fileClassName);
                            if (!$fileClass->isAbstract() && !is_array(GiiyActiveRecord::model($fileClassName)->getPrimaryKey()))
                                $models[] = $fileClassName;
                        }
                    }
                }
            }
        }

        return $models;
    }
}